<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.hola</groupId>
  <artifactId>HolaFramwork</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  
  <name>HolaFramwork</name>
  <description>Demo project for Spring Boot</description>
  

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.2.RELEASE</version>
    <relativePath/> 
  </parent>

  <properties>
  	<start-class>com.helios.Application</start-class> <!-- 指定启动类（main方法的位置） -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
  </properties>

  <dependencies>
      <!-- log related -->
		<dependency> <!-- exclude掉spring-boot的默认log配置 -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<!-- 发布时去除内置tomcat -->  
              <!-- <exclusion>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-starter-tomcat</artifactId>
              </exclusion> -->
			</exclusions>
		</dependency>
		<!-- end of log related -->	
		
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-tomcat</artifactId>
	        <scope>provided</scope>
		</dependency>
		
		<dependency> <!-- 引入log4j2依赖 -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>	<!-- 加上这个才能辨认到log4j2.yml文件 -->
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		
		 <dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<dependency>
		      <groupId>c3p0</groupId>
		      <artifactId>c3p0</artifactId>
		      <version>0.9.1.2</version>
		</dependency>
	    
	     <!-- 测试模块，包括JUnit、Hamcrest、Mockito -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
          <scope>provided</scope>
      </dependency>
      
     
	   <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

        <!--httpclient  配置主类是:HttpClient-->
      <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
          <version>4.3.1</version>
      </dependency>
      
       <!--servlet-api-->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>3.1.0</version>
          <scope>provided</scope>
      </dependency>

      <!-- javax.servlet/jstl -->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>1.2</version>
      </dependency>
      
      
      
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-redis</artifactId>
      </dependency>
      
     	<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.10.2</version>
		</dependency>
		
		<!-- local cache -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<!-- local cache -->
      
      <!-- 支持 @ConfigurationProperties 注解 -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency> -->
		
	

		<!-- devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在
		application.properties文件中配置spring.thymeleaf.cache=false来实现）， 
            实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
             即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），
             注意：因为其采用的虚拟机机制，该项重启是很快的 -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            optional=true,依赖不会传递，该项目依赖devtools；
            之后依赖myboot项目的项目如果想要使用devtools，需要重新引入
            <optional>true</optional>
        </dependency> -->

      <!-- 核心模块，包括自动配置支持、日志和YAML -->
      <!-- <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter</artifactId>
      </dependency> -->

    <!-- <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency> -->
    
    

  <!--   <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-freemarker</artifactId>
    </dependency> -->
    
    

      <!--某模板-->
      <!--Thymeleaf的主要目标在于提供一种可被浏览器正确显示的、格式良好的模板创建方式，因此也可以用作静态建模。
      你可以使用它创建经过验证的XML与HTML模板。相对于编写逻辑或代码，开发者只需将标签属性添加到模板中即可。
      接下来，这些标签属性就会在DOM（文档对象模型）上执行预先制定好的逻辑。Thymeleaf的可扩展性也非常棒。
      你可以使用它定义自己的模板属性集合，这样就可以计算自定义表达式并使用自定义逻辑。
      这意味着Thymeleaf还可以作为模板引擎框架。登陆页面用的他 -->
      <!-- <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-thymeleaf</artifactId>
      </dependency> -->
   <!--  <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency> -->
    
     <!-- <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-spring-boot-starter-basic</artifactId>
      <version>5.21.0</version>
    </dependency>-->
    
   

     <!--  <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web-services</artifactId>
      </dependency> -->
      
      <!-- <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-websocket</artifactId>
      </dependency> -->

      <!-- SpringSecurity依赖 -->
        <!--<dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-security</artifactId>
        </dependency>-->
      <!-- 授权验证 -->
    <!--  <dependency>
          <groupId>org.springframework.security.oauth</groupId>
          <artifactId>spring-security-oauth2</artifactId>
          <version>2.0.3.RELEASE</version>
      </dependency>-->


      <!-- <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>druid</artifactId>
          <version>1.0.15</version>
      </dependency> -->


      <!--替换了Servlet那一套会话管理，既不依赖容器，又不需要改动代码-->
   <!-- <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session</artifactId>
    </dependency>-->


    <!--   <dependency>
          <groupId>com.hola</groupId>
          <artifactId>HolaFramwork</artifactId>
          <version>1.0-SNAPSHOT</version>
          <scope>test</scope>
      </dependency> -->
      
		<!-- scheduler -->
	<!-- <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-context-support</artifactId>  
            <version>4.2.7.RELEASE</version>  
        </dependency>  
	<dependency>  
            <groupId>org.quartz-scheduler</groupId>  
            <artifactId>quartz</artifactId>  
            <version>2.2.3</version>  
        </dependency>   -->
	<!-- scheduler -->
	
	<!-- webcollector -->
	<!-- <dependency>
	    <groupId>cn.edu.hfut.dmic.webcollector</groupId>
	    <artifactId>WebCollector</artifactId>
	    <version>2.32</version>
	</dependency>
	<dependency>
	    <groupId>com.googlecode.juniversalchardet</groupId>
	    <artifactId>juniversalchardet</artifactId>
	    <version>1.0.3</version>
	</dependency>
	
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20140107</version>
	</dependency>
	<dependency>
	    <groupId>com.sleepycat</groupId>
	    <artifactId>je</artifactId>
	    <version>5.0.73</version>
	</dependency>
	<dependency>
	    <groupId>org.hamcrest</groupId>
	    <artifactId>hamcrest-core</artifactId>
	    <version>1.3</version>
	</dependency> -->
<!-- webcollector -->	



  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        	<!-- <configuration> 卡的一毛
                    <fork>true</fork>如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart
            </configuration> -->
      </plugin>
    </plugins>
  </build>



</project>
